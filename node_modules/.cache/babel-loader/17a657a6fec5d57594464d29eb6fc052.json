{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/js/react/front-backend-fast-company/new-fast-company/src/app/hooks/useUsers.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\nexport const useUser = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst UserProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [user, setUsers] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n\n  async function getUsers() {\n    try {\n      const {\n        content\n      } = await userService.get();\n      setUsers(content);\n      setLoading(false);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: users,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(UserProvider, \"ePov1R7AvDPEQiWGLXnD7Dg5Hps=\");\n\n_c = UserProvider;\nexport default UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/macbook/Desktop/js/react/front-backend-fast-company/new-fast-company/src/app/hooks/useUsers.jsx"],"names":["React","useContext","useEffect","useState","userService","toast","UserContext","createContext","useUser","UserProvider","children","user","setUsers","isLoading","setLoading","error","setError","getUsers","content","get","errorCatcher","message","response","data","users"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,WAAW,gBAAGN,KAAK,CAACO,aAAN,EAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC3B,SAAOP,UAAU,CAACK,WAAD,CAAjB;AACD,CAFM;;GAAME,O;;AAIb,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACU,SAAD,EAAYC,UAAZ,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,KAAK,KAAK,IAAd,EAAoB;AAClBV,MAAAA,KAAK,CAACU,KAAD,CAAL;AACAC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GALQ,EAKN,CAACD,KAAD,CALM,CAAT;;AAOA,iBAAeE,QAAf,GAA0B;AACxB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMd,WAAW,CAACe,GAAZ,EAA1B;AACAP,MAAAA,QAAQ,CAACM,OAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdK,MAAAA,YAAY,CAACL,KAAD,CAAZ;AACD;AACF;;AAED,WAASK,YAAT,CAAsBL,KAAtB,EAA6B;AAC3B,UAAM;AAAEM,MAAAA;AAAF,QAAcN,KAAK,CAACO,QAAN,CAAeC,IAAnC;AACAP,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AAED,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAIU,KAA/B;AAAA,cAAuCd;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAhCD;;IAAMD,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n  return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n  const [user, setUsers] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n\n  async function getUsers() {\n    try {\n      const { content } = await userService.get();\n      setUsers(content);\n      setLoading(false);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  function errorCatcher(error) {\n    const { message } = error.response.data;\n    setError(message);\n    setLoading(false);\n  }\n\n  return <UserContext.Provider value = {users}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}