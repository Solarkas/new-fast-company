{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/js/react/front-backend-fast-company/new-fast-company/src/app/components/page/usersListPage/usersListPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersListPage = () => {\n  _s();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [professions, setProfession] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({\n    path: \"name\",\n    order: \"asc\"\n  });\n  const pageSize = 8;\n  const [users, setUsers] = useState();\n\n  const handleDelete = userId => {// setUsers(users.filter((user) => user._id !== userId));\n  };\n\n  const handleToggleBookMark = id => {\n    const newArray = users.map(user => {\n      if (user._id === id) {\n        return { ...user,\n          bookmark: !user.bookmark\n        };\n      }\n\n      return user;\n    });\n    setUsers(newArray);\n  };\n\n  useEffect(() => {\n    api.professions.fetchAll().then(data => setProfession(data));\n  }, []);\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchQuery]);\n\n  const handleProfessionSelect = item => {\n    if (searchQuery !== \"\") setSearchQuery(\"\");\n    setSelectedProf(item);\n  };\n\n  const handleSearchQuery = ({\n    target\n  }) => {\n    setSelectedProf(undefined);\n    setSearchQuery(target.value);\n  };\n\n  const handlePageChange = pageIndex => {\n    setCurrentPage(pageIndex);\n  };\n\n  const handleSort = item => {\n    setSortBy(item);\n  };\n\n  if (users) {\n    const filteredUsers = searchQuery ? users.filter(user => user.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1) : selectedProf ? users.filter(user => JSON.stringify(user.profession) === JSON.stringify(selectedProf)) : users;\n    const count = filteredUsers.length;\n\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: [professions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column flex-shrink-0 p-3\",\n        children: [/*#__PURE__*/_jsxDEV(GroupList, {\n          selectedItem: selectedProf,\n          items: professions,\n          onItemSelect: handleProfessionSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary mt-2\",\n          onClick: clearFilter,\n          children: [\" \", \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(SearchStatus, {\n          length: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"searchQuery\",\n          placeholder: \"Search...\",\n          onChange: handleSearchQuery,\n          value: searchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), count > 0 && /*#__PURE__*/_jsxDEV(UserTable, {\n          users: usersCrop,\n          onSort: handleSort,\n          selectedSort: sortBy,\n          onDelete: handleDelete,\n          onToggleBookMark: handleToggleBookMark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            itemsCount: count,\n            pageSize: pageSize,\n            currentPage: currentPage,\n            onPageChange: handlePageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  }\n\n  return \"loading...\";\n};\n\n_s(UsersListPage, \"WXX1xMXSQpkO3QPmYUUjzDvAt8c=\");\n\n_c = UsersListPage;\nUsersListPage.propTypes = {\n  users: PropTypes.array\n};\nexport default UsersListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersListPage\");","map":{"version":3,"sources":["/Users/macbook/Desktop/js/react/front-backend-fast-company/new-fast-company/src/app/components/page/usersListPage/usersListPage.jsx"],"names":["React","useState","useEffect","PropTypes","paginate","Pagination","api","GroupList","SearchStatus","UserTable","_","UsersListPage","currentPage","setCurrentPage","professions","setProfession","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","path","order","pageSize","users","setUsers","handleDelete","userId","handleToggleBookMark","id","newArray","map","user","_id","bookmark","fetchAll","then","data","handleProfessionSelect","item","handleSearchQuery","target","undefined","value","handlePageChange","pageIndex","handleSort","filteredUsers","filter","name","toLowerCase","indexOf","JSON","stringify","profession","count","length","sortedUsers","orderBy","usersCrop","clearFilter","propTypes","array"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport api from \"../../../api\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nconst UsersListPage = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [professions, setProfession] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedProf, setSelectedProf] = useState();\n  const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n  const pageSize = 8;\n\n  const [users, setUsers] = useState();\n  \n  const handleDelete = (userId) => {\n    // setUsers(users.filter((user) => user._id !== userId));\n  };\n  const handleToggleBookMark = (id) => {\n    const newArray = users.map((user) => {\n      if (user._id === id) {\n        return { ...user, bookmark: !user.bookmark };\n      }\n      return user;\n    });\n    setUsers(newArray);\n  };\n\n  useEffect(() => {\n    api.professions.fetchAll().then((data) => setProfession(data));\n  }, []);\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [selectedProf, searchQuery]);\n\n  const handleProfessionSelect = (item) => {\n    if (searchQuery !== \"\") setSearchQuery(\"\");\n    setSelectedProf(item);\n  };\n  const handleSearchQuery = ({ target }) => {\n    setSelectedProf(undefined);\n    setSearchQuery(target.value);\n  };\n\n  const handlePageChange = (pageIndex) => {\n    setCurrentPage(pageIndex);\n  };\n  const handleSort = (item) => {\n    setSortBy(item);\n  };\n\n  if (users) {\n    const filteredUsers = searchQuery\n      ? users.filter(\n          (user) =>\n            user.name.toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1\n        )\n      : selectedProf\n      ? users.filter(\n          (user) =>\n            JSON.stringify(user.profession) === JSON.stringify(selectedProf)\n        )\n      : users;\n\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n      setSelectedProf();\n    };\n\n    return (\n      <div className=\"d-flex\">\n        {professions && (\n          <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n            <GroupList\n              selectedItem={selectedProf}\n              items={professions}\n              onItemSelect={handleProfessionSelect}\n            />\n            <button className=\"btn btn-secondary mt-2\" onClick={clearFilter}>\n              {\" \"}\n              Очистить\n            </button>\n          </div>\n        )}\n        <div className=\"d-flex flex-column\">\n          <SearchStatus length={count} />\n          <input\n            type=\"text\"\n            name=\"searchQuery\"\n            placeholder=\"Search...\"\n            onChange={handleSearchQuery}\n            value={searchQuery}\n          />\n          {count > 0 && (\n            <UserTable\n              users={usersCrop}\n              onSort={handleSort}\n              selectedSort={sortBy}\n              onDelete={handleDelete}\n              onToggleBookMark={handleToggleBookMark}\n            />\n          )}\n          <div className=\"d-flex justify-content-center\">\n            <Pagination\n              itemsCount={count}\n              pageSize={pageSize}\n              currentPage={currentPage}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return \"loading...\";\n};\nUsersListPage.propTypes = {\n  users: PropTypes.array,\n};\n\nexport default UsersListPage;\n"]},"metadata":{},"sourceType":"module"}